### Starting build.
# Target: main.ml.depends, tags: { extension:ml, file:main.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules main.ml > main.ml.depends # cached
# Target: eval.ml.depends, tags: { extension:ml, file:eval.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules eval.ml > eval.ml.depends # cached
# Target: ast.ml.depends, tags: { extension:ml, file:ast.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules ast.ml > ast.ml.depends # cached
# Target: ast.cmo, tags: { byte, compile, extension:ml, file:ast.ml, implem, ocaml, quiet }
/usr/bin/ocamlc.opt -c -o ast.cmo ast.ml # cached
# Target: value.ml.depends, tags: { extension:ml, file:value.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules value.ml > value.ml.depends # cached
# Target: value.cmo, tags: { byte, compile, extension:ml, file:value.ml, implem, ocaml, quiet }
/usr/bin/ocamlc.opt -c -o value.cmo value.ml # cached
# Target: eval.cmo, tags: { byte, compile, extension:ml, file:eval.ml, implem, ocaml, quiet }
/usr/bin/ocamlc.opt -c -o eval.cmo eval.ml # cached
# Target: lexer.mll, tags: { extension:mll, file:lexer.mll, lexer, ocaml, ocamllex, quiet }
/usr/bin/ocamllex.opt -q lexer.mll # cached
# Target: lexer.ml.depends, tags: { extension:ml, file:lexer.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules lexer.ml > lexer.ml.depends # cached
# Target: parser.mly, tags: { extension:mly, file:parser.mly, ocaml, ocamlyacc, parser, quiet }
/usr/bin/ocamlyacc parser.mly
+ /usr/bin/ocamlyacc parser.mly
1 rule never reduced
29 shift/reduce conflicts, 18 reduce/reduce conflicts.
# Target: parser.mli.depends, tags: { extension:mli, file:parser.mli, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules parser.mli > parser.mli.depends # cached
# Target: parser.cmi, tags: { byte, compile, extension:mli, file:parser.mli, interf, ocaml, quiet }
/usr/bin/ocamlc.opt -c -o parser.cmi parser.mli # cached
# Target: lexer.cmo, tags: { byte, compile, extension:ml, file:lexer.ml, implem, ocaml, quiet }
/usr/bin/ocamlc.opt -c -o lexer.cmo lexer.ml # cached
# Target: print_expr.ml.depends, tags: { extension:ml, file:print_expr.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules print_expr.ml > print_expr.ml.depends # cached
# Target: print_expr.cmo, tags: { byte, compile, extension:ml, file:print_expr.ml, implem, ocaml, quiet }
/usr/bin/ocamlc.opt -c -o print_expr.cmo print_expr.ml # cached
# Target: print_val.ml.depends, tags: { extension:ml, file:print_val.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules print_val.ml > print_val.ml.depends # cached
# Target: print_val.cmo, tags: { byte, compile, extension:ml, file:print_val.ml, implem, ocaml, quiet }
/usr/bin/ocamlc.opt -c -o print_val.cmo print_val.ml # cached
# Target: main.cmo, tags: { byte, compile, extension:ml, file:main.ml, implem, ocaml, quiet }
/usr/bin/ocamlc.opt -c -o main.cmo main.ml # cached
# Target: ast.cmx, tags: { compile, extension:cmx, extension:ml, file:ast.cmx, file:ast.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt.opt -c -o ast.cmx ast.ml # cached
# Target: value.cmx, tags: { compile, extension:cmx, extension:ml, file:value.cmx, file:value.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt.opt -c -o value.cmx value.ml # cached
# Target: eval.cmx, tags: { compile, extension:cmx, extension:ml, file:eval.cmx, file:eval.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt.opt -c -o eval.cmx eval.ml # cached
# Target: parser.ml.depends, tags: { extension:ml, file:parser.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep.opt -modules parser.ml > parser.ml.depends
+ /usr/bin/ocamldep.opt -modules parser.ml > parser.ml.depends
File "parser.ml", line 329, characters 54-62:
Error: Syntax error
Command exited with code 2.
# Compilation unsuccessful.
